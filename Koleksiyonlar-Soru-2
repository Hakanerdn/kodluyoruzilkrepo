using System;

namespace ConsoleApplication
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] numbers = new int[20];

            for (int i = 0; i < 20; i++)
            {
                Console.WriteLine("Enter a number:");
                string input = Console.ReadLine();

                // Check if the input is a number
                if (!int.TryParse(input, out int number))
                {
                    Console.WriteLine("Invalid input. Please enter a number.");
                    i--;
                    continue;
                }

                numbers[i] = number;
            }

            // Find the 3 largest numbers
            Array.Sort(numbers);
            Array.Reverse(numbers);
            int[] largestNumbers = new int[3];
            Array.Copy(numbers, largestNumbers, 3);

            // Find the 3 smallest numbers
            Array.Sort(numbers);
            int[] smallestNumbers = new int[3];
            Array.Copy(numbers, smallestNumbers, 3);

            // Calculate the averages
            double averageLargest = GetAverage(largestNumbers);
            double averageSmallest = GetAverage(smallestNumbers);

            // Print the results
            Console.WriteLine("Largest numbers:");
            Console.WriteLine("Average: " + averageLargest);
            Console.WriteLine("Sum of averages: " + (averageLargest + averageSmallest));
            foreach (int number in largestNumbers)
            {
                Console.WriteLine(number);
            }

            Console.WriteLine("Smallest numbers:");
            Console.WriteLine("Average: " + averageSmallest);
            foreach (int number in smallestNumbers)
            {
                Console.WriteLine(number);
            }
        }

        static double GetAverage(int[] numbers)
        {
            int sum = 0;
            foreach (int number in numbers)
            {
                sum += number;
            }
            return (double)sum / numbers.Length;
        }
    }
}
